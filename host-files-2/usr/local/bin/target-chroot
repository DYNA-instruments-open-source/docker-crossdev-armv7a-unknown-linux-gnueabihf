#!/bin/bash

/etc/init.d/qemu-binfmt --quiet start

#Next two lines are optional. Activate if the qemu-wrapper is used. Check that the wrapper location corresponds with the call at the end of line two
#echo '-1' > /proc/sys/fs/binfmt_misc/arm #deregister wrong arm
#echo ':arm:M::\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\x00\xff\xfe\xff\xff\xff:/usr/local/bin/qemu-wrapper:' > /proc/sys/fs/binfmt_misc/register

CHROOT_DIR=/usr/armv7a-unknown-linux-gnueabihf
mount -t proc proc ${CHROOT_DIR}/proc || { echo "Do you need to run the container --privileged ?"; exit 1 }
mount --rbind /sys ${CHROOT_DIR}/sys
mount --make-rslave ${CHROOT_DIR}/sys
mount --rbind /dev ${CHROOT_DIR}/dev
mount --make-rslave ${CHROOT_DIR}/dev
mkdir -p ${CHROOT_DIR}/usr/portage
mount --rbind /usr/portage ${CHROOT_DIR}/usr/portage
cp /etc/resolv.conf ${CHROOT_DIR}/etc/resolv.conf

export QEMU_CPU=cortex-a7
export QEMU_LD_PREFIX=$CHROOT_DIR
chroot . /bin/bash --login "${@:---interactive}"
 
umount -R ${CHROOT_DIR}/{dev,sys,proc,usr/portage}
